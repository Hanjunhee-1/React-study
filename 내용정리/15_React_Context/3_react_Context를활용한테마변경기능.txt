이번에는 Context 를 통해 테마를 변경하는 기능을 가진 간단한 컴포넌트를 만들어볼 것이다.

```
    // ThemeContext.jsx
    import React from "react";

    const ThemeContext = React.createContext();
    ThemeContext.displayName = 'ThemeContext';

    export default ThemeContext;
```
기본값을 따로 주지 않고 Context 를 생성했다.

```
    // MainContent.jsx
    import { useContext } from "react";
    import ThemeContext from "./ThemeContext";

    export default function MainContent(props) {
        const { theme, toggleTheme } = useContext(ThemeContext);

        return (
            <div
                style={{
                    width: '100vw',
                    height: '100vh',
                    padding: '1.5rem',
                    backgroundColor: theme === 'light' ? 'white' : 'black',
                    color: theme === 'light' ? 'black' : 'white',
                }}
            >
                <p>안녕하세요, 테마 변경이 가능한 웹사이트입니다.</p>
                <button onClick={toggleTheme}>테마 변경</button>
            </div>
        )
    }
```
useContext() 라는 훅을 사용했는데 Context.Consumer 와 똑같은 기능을 한다. 
Context 로 넘겨받은 toggleTheme() 이라는 함수를 통해 테마를 변경해줄 것이다.

```
    // DarkOrLight.jsx
    import { useCallback, useState } from "react";
    import ThemeContext from "./ThemeContext";
    import MainContent from "./MainContent";

    export default function DarkOrLight(props) {
        const [ theme, setTheme ] = useState('light');

        const toggleTheme = useCallback(() => {
            if (theme === 'light') {
                setTheme('dark');
            } else if (theme === 'dark') {
                setTheme('light');
            }
        }, [theme]);

        return (
            <ThemeContext.Provider value ={{ theme, toggleTheme }}>
                <MainContent />
            </ThemeContext.Provider>
        )
    }
```
theme 은 useState() 로 관리해준다. toggleTheme 함수는 useCallback() 훅을 사용하는데
혹시 useCallback() 이 뭔지 기억이 안난다면 '내용정리/8_React_Hooks' 를 참고하자!
이 컴포넌트는 Provider 로 MainContent 컴포넌트를 감싸주는 컴포넌트이다.
value 로 theme 과 toggleTheme() 함수를 넘겨준다. 그럼 MainContent 는 useContext() 를 사용하고 있으니 
theme 과 toggleTheme() 함수를 잘 받아서 사용할 수 있다.

```
    // index.js
    ...
    import DarkOrLight from './15_실습_Context를활용한테마변경기능/DarkOrLight';

    const root = ReactDOM.createRoot(document.getElementById('root'));
    root.render(
        <React.StrictMode>
            <DarkOrLight />,
            ...
        </React.StrictMode>,
        document.getElementById('root')
    );
```