★  Form

    Form 은 양식이라는 뜻을 갖고 있다.
    예를 들면 로그인 창의 '로그인 양식',
    게시판 탭의 '게시글 작성 양식' 등등이 존재한다.

    예시로 들어본 양식의 공통점들을 보면 사용자에게 입력을 받기 위해 사용된다라는 특징이 있다.
    즉, Form 은 사용자로부터 입력을 받기 위해 사용하는 것이다.

    HTML Form 의 예시를 보자.
    ```
        <form>
            <label>
                이름:
                <input type='text' name='name' />
            </label>    
            <button type='submit'>제출</button>
        </form>
    ```
    HTML 을 배운 적이 있다면 form 태그를 이용한 form 작성 방법을 알고 있을 것이다.

    ☆  Controlled Component 는 이렇게 사용자로부터 Form 으로 입력받은 데이터를 다루기 위한 Component 이다.


★  Controlled Component

    Controlled Component 는 사용자로부터 Form 으로 입력받은 데이터를 다루기 위한 컴포넌트라고 했다.
    그럼 이것을 누가 관리할까?

    바로 React 가 관리해주는 것이다.
    Controlled Component 를 다르게 생각하면
    '값이 React 의 통제를 받는 input form element' 라고 생각할 수 있다.

    Controlled Component 의 예시 코드를 보자!
    ```
        function NameForm(props) {
            const [value, setValue] = useState('');

            const handleChange = (event) => {
                setValue(event.target.value);
            }

            const handleSubmit = (event) => {
                alert('입력한 이름: ' + value);
                event.preventDefault();
            }

            return (
                <form onSubmit={handleSubmit}>
                    <label>
                        이름:
                        <input type='text', value={value} onChange={handleChange} />
                    </label>
                    <button type='submit'>제출</button>
                </form>
            )
        }
    ```
    value 를 useState() 로 관리한다.
    handleChange 에서는 input 태그의 value 를 setValue() 에 매개변수로 주어
    useState() 로 관리되고 있는 value 의 값을 바꿔주는 것이다.

    handleSubmit 은 사용자가 input 태그에 무언가를 입력하고 '제출' 버튼을 눌렀을 때
    실행되는 함수이다. 함수의 내용은 alert() 는 알겠는데 preventDefault() 는 잘 모르겠다.

    이렇게 Controlled Component 로 직접 사용자가 입력한 값을 다룰 수 있다는 것을 잘 알고 있자. 